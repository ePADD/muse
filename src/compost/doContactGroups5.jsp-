
<%@page language="java" import="java.util.*"%>
<%@page language="java" import="java.io.*"%>
<%@page language="java" import="edu.stanford.muse.index.*"%>
<%@page language="java" import="edu.stanford.muse.email.*"%>
<%@page language="java" import="edu.stanford.muse.webapp.*"%>
<%@page language="java" import="edu.stanford.muse.mining.*"%>
<%@page language="java" import="edu.stanford.muse.util.*"%>
<%@page language="java" import="edu.stanford.muse.groups.*"%>
<%@page language="java" import="org.json.*"%>

<%
	JSPHelper.logRequest(request);
	// This jsp fetches the headers and populates the contactGroups and emailDocs session vars
	// and passes on the baton to getContactGroups2.jsp
    Thread.currentThread().setName("getContactGroups");
    boolean success = JSPHelper.fetchEmails(request, session, false);

	if (!success)
	{
        response.setContentType("text/xml");
        response.setHeader("Cache-Control", "no-cache");
	    out.println("<result><div resultPage=\"error.jsp\"></div></result>");
		return;
	}

    response.setContentType("text/xml");
    response.setHeader("Cache-Control", "no-cache");

    // Let original page handle error situations
    AddressBook addressBook = (AddressBook) session.getAttribute("addressBook");
    String rootDir = (String) session.getAttribute("rootDir");
    Collection<EmailDocument> allEmailDocs = (Collection<EmailDocument>) session.getAttribute("emailDocs");
    if (addressBook == null || allEmailDocs == null || rootDir == null || allEmailDocs.size() == 0)
    {
        out.println("<result><div resultPage=\"paramContactGroups3.jsp\"></div></result>");
        return;
    }

    String callbackSocialFlowsURL  = (String)session.getAttribute("socialflow");
    if ("socialflow".equals(session.getAttribute("mode"))
        && callbackSocialFlowsURL != null && callbackSocialFlowsURL.trim().length() > 0)
    {
    	// Redirect to algo page that is well-integrated with SocialFlows
        String genGroupURL
        = "getContactGroupsToSocialFlows.jsp?"
          + "minCount="+AlgoStats.DEFAULT_MIN_FREQUENCY+"&maxError="+AlgoStats.DEFAULT_MAX_ERROR
          + "&minGroupSize="+AlgoStats.DEFAULT_MIN_GROUP_SIZE+"&minMergeGroupSim="+AlgoStats.DEFAULT_MIN_GROUP_SIMILARITY
          + "&utilityType=linear&multiplier=1.4&submit=submit"+"&useNewGroupsAlgo=true";

    	String useNewGroupsAlgo = (String)request.getParameter("useNewGroupsAlgo");
    	if (useNewGroupsAlgo != null && useNewGroupsAlgo.equals("true")) {
    		System.out.println("doContactGroups3.jsp: Should be displaying new algo of getContactGroups5.jsp\n");

            out.println("<result><div resultPage=\"getContactGroups5.jsp\"></div></result>");
    	}
    	else {
            System.out.println("doContactGroups3.jsp: Should be displaying\n");

            out.println("<result><div resultPage=\"getContactGroupsToSocialFlows.jsp\"></div></result>");
        }


    }
    else {
        out.println("<result><div resultPage=\"getContactGroups5.jsp\"></div></result>");
    }
%>